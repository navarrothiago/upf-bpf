#!/bin/bash
main() {

  set -o errexit
  set -o pipefail
  set -o nounset
  set -x

  local -r context="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
  local env_file_name=env.sh

  if [[ -f "${context}"/../env.sh ]]; then
    env_file="${context}"/../env.sh
  else
    env_file="${context}"/../.env.sample.sh
    cp "${env_file}" "${context}"/../"${env_file_name}"
  fi

  source "${env_file}"
  local base_dev_image="${1-ubuntu:20.04}"

  echo "Base image "${base_dev_image}""

  #Copy env file to the context
  cp "${env_file}" "${context}"/"${env_file_name}"

  # Build dockerfile.
  docker build --tag="${IMAGE_TAG}":"${IMAGE_VERSION}" --rm -f "${context}"/"${DOCKERFILE}" "${context}" \
               --build-arg ENV_FILENAME="${env_file_name}" \
               --build-arg DUT_SERVER_IP="${DUT_IP}" \
               --build-arg TREX_SERVER_IP="${TREX_SERVER_IP}" \
               --build-arg JUMP_SERVER_USERNAME="${JUMP_SERVER_USERNAME}" \
               --build-arg JUMP_SERVER_IP="${JUMP_SERVER_IP}" \
               --build-arg JUMP_SERVER_PORT="${JUMP_SERVER_PORT}" \
               --build-arg BASE_DEV_IMAGE="${base_dev_image}"

  # Remove env file from the context
  rm "${context}"/"${env_file_name}"

  echo
  echo "Image "${IMAGE_TAG}" was build with base image "${base_dev_image}""
  echo
}

main "$@"
